<?xml version="1.0" ?>
<VoreenData version="1">
    <Workspace version="2" GlobalDescription='&lt;font color=&quot;#000000&quot;&gt;&lt;h4&gt;Mein zweiter Workspace&lt;/h4&gt; &lt;p&gt;Hier wird mit Shader die farbe und die Darstellung des Datensatzen geändert.&lt;/p&gt;&lt;/font&gt;'>
        <ProcessorNetwork version="15">
            <MetaData>
                <MetaItem name="DocumentationGraphicsItems" type="SerializableVectorMetaData::TextBoxMetaData" isOwner="true">
                    <values />
                </MetaItem>
                <MetaItem name="ProcessorSelection" type="SerializableVectorMetaData::Processor" isOwner="false">
                    <values>
                        <item type="SimpleRaycaster" ref="ref2" />
                    </values>
                </MetaItem>
                <MetaItem name="ZoomCenter" type="Vec2MetaData">
                    <value x="-52.79036331" y="-78.91893005" />
                </MetaItem>
                <MetaItem name="ZoomFactor" type="FloatMetaData" value="1.87534225" />
            </MetaData>
            <Processors>
                <Processor type="VolumeSource" name="VolumeSource" id="ref0">
                    <MetaData>
                        <MetaItem name="ProcessorGraphicsItem" type="PositionMetaData" x="-141" y="-266" />
                    </MetaData>
                    <Properties>
                        <Property mapKey="volumeInfo" name="volumeInfo" />
                        <Property mapKey="volumeURL" name="volumeURL" url="../volumes/mysterybox.vvd?preferredReader=VvdVolumeReader" />
                    </Properties>
                    <Inports />
                    <Outports>
                        <Port name="volumehandle.volumehandle" direction="0" portID="volumehandle.volumehandle" guiName="Volume Output" allowMultipleConnections="true" invalidationLevel="1">
                            <Properties>
                                <Property mapKey="blockEvents" name="blockEvents" value="false" />
                            </Properties>
                        </Port>
                    </Outports>
                    <CoProcessorInports />
                    <CoProcessorOutports />
                    <InteractionHandlers />
                </Processor>
                <Processor type="MeinProcessor" name="MeinProcessor" id="ref1">
                    <MetaData>
                        <MetaItem name="ProcessorGraphicsItem" type="PositionMetaData" x="-63" y="-177" />
                    </MetaData>
                    <Properties>
                        <Property mapKey="camera" name="camera" projectionMode="1" maxValue="500" minValue="0.01" frustLeft="-0.04142136" frustRight="0.04142136" frustBottom="-0.04142136" frustTop="0.04142136" frustNear="0.1" frustFar="502" fovy="45" eyeMode="1" eyeSeparation="65" axisMode="0" stereoFocalLengh="600" stereoWidth="450" stereoRelativeFocalLength="0.05" useRealWorldFrustum="0" centerOption="0" adaptOnChange="true" id="ref5">
                            <MetaData>
                                <MetaItem name="EditorWindow" type="WindowStateMetaData" visible="false" x="-1049" y="308" />
                            </MetaData>
                            <position x="3.84622121" y="0.16924909" z="0.02949088" />
                            <focus x="0" y="0" z="0" />
                            <upVector x="-0.04396628" y="0.99903297" z="0.00051479" />
                            <trackball moveCenter="false">
                                <center x="0" y="0" z="0" />
                            </trackball>
                            <sceneLLF x="-1" y="-1" z="-1" />
                            <sceneURB x="1" y="1" z="1" />
                        </Property>
                    </Properties>
                    <Inports>
                        <Port name="volumeinport" direction="1" portID="volumeinport" guiName="Volume Input" allowMultipleConnections="false" invalidationLevel="1">
                            <Properties>
                                <Property mapKey="textureBorderIntensity" name="textureBorderIntensity" value="0" />
                                <Property mapKey="textureClampMode_" name="textureClampMode_" value="clamp-to-edge" />
                                <Property mapKey="textureFilterMode_" name="textureFilterMode_" value="linear" />
                            </Properties>
                        </Port>
                    </Inports>
                    <Outports>
                        <Port name="image.entrypoints" direction="0" portID="image.entrypoints" guiName="Entry-points Output" allowMultipleConnections="true" invalidationLevel="1">
                            <Properties>
                                <Property mapKey="blockEvents" name="blockEvents" value="false" />
                                <Property mapKey="image.entrypoints.renderSizeReceive" name="image.entrypoints.renderSizeReceive" id="ref8">
                                    <value x="422" y="379" />
                                </Property>
                            </Properties>
                        </Port>
                        <Port name="image.exitpoints" direction="0" portID="image.exitpoints" guiName="Exit-points Output" allowMultipleConnections="true" invalidationLevel="1">
                            <Properties>
                                <Property mapKey="blockEvents" name="blockEvents" value="false" />
                                <Property mapKey="image.exitpoints.renderSizeReceive" name="image.exitpoints.renderSizeReceive" id="ref9">
                                    <value x="422" y="379" />
                                </Property>
                            </Properties>
                        </Port>
                    </Outports>
                    <CoProcessorInports />
                    <CoProcessorOutports />
                    <InteractionHandlers>
                        <Handler name="cameraHandler">
                            <Properties>
                                <Property mapKey="cameraHandler.interactionMetaphor" name="cameraHandler.interactionMetaphor" value="trackball" />
                                <Property mapKey="cameraHandler.moveBackward" name="cameraHandler.moveBackward" enabled="true" mouseAction="0" mouseButtons="0" keyCode="115" modifier="0" shareEvents="false" />
                                <Property mapKey="cameraHandler.moveDown" name="cameraHandler.moveDown" enabled="true" mouseAction="0" mouseButtons="0" keyCode="102" modifier="0" shareEvents="false" />
                                <Property mapKey="cameraHandler.moveForward" name="cameraHandler.moveForward" enabled="true" mouseAction="0" mouseButtons="0" keyCode="119" modifier="0" shareEvents="false" />
                                <Property mapKey="cameraHandler.moveLeft" name="cameraHandler.moveLeft" enabled="true" mouseAction="0" mouseButtons="0" keyCode="97" modifier="0" shareEvents="false" />
                                <Property mapKey="cameraHandler.moveRight" name="cameraHandler.moveRight" enabled="true" mouseAction="0" mouseButtons="0" keyCode="100" modifier="0" shareEvents="false" />
                                <Property mapKey="cameraHandler.moveUp" name="cameraHandler.moveUp" enabled="true" mouseAction="0" mouseButtons="0" keyCode="114" modifier="0" shareEvents="false" />
                                <Property mapKey="cameraHandler.multitouch" name="cameraHandler.multitouch" enabled="true" mouseAction="0" mouseButtons="0" keyCode="0" modifier="0" shareEvents="false" />
                                <Property mapKey="cameraHandler.rotate" name="cameraHandler.rotate" enabled="true" mouseAction="127" mouseButtons="1" keyCode="0" modifier="0" shareEvents="false" />
                                <Property mapKey="cameraHandler.rotatecont" name="cameraHandler.rotatecont" enabled="true" mouseAction="127" mouseButtons="1" keyCode="0" modifier="2" shareEvents="false" />
                                <Property mapKey="cameraHandler.shift" name="cameraHandler.shift" enabled="true" mouseAction="127" mouseButtons="1" keyCode="0" modifier="1" shareEvents="false" />
                                <Property mapKey="cameraHandler.wheelZoom" name="cameraHandler.wheelZoom" enabled="true" mouseAction="16" mouseButtons="96" keyCode="0" modifier="0" shareEvents="false" />
                                <Property mapKey="cameraHandler.zoom" name="cameraHandler.zoom" enabled="true" mouseAction="127" mouseButtons="4" keyCode="0" modifier="0" shareEvents="false" />
                            </Properties>
                        </Handler>
                    </InteractionHandlers>
                </Processor>
                <Processor type="Canvas" name="Canvas" id="ref4">
                    <MetaData>
                        <MetaItem name="ProcessorGraphicsItem" type="PositionMetaData" x="-100" y="72" />
                        <MetaItem name="ProcessorWidget" type="WindowStateMetaData" visible="true" x="434" y="251" width="422" height="379" />
                        <MetaItem name="preferedNetworkModeCanvasFS" type="BoolMetaData" value="false" />
                        <MetaItem name="preferedNetworkModeCanvasPosition" type="IVec2MetaData">
                            <value x="434" y="251" />
                        </MetaItem>
                        <MetaItem name="preferedNetworkModeCanvasSize" type="IVec2MetaData">
                            <value x="422" y="379" />
                        </MetaItem>
                    </MetaData>
                    <Properties>
                        <Property mapKey="canvasSize" name="canvasSize">
                            <value x="422" y="379" />
                        </Property>
                        <Property mapKey="saveScreenshot" name="saveScreenshot" />
                        <Property mapKey="screenshotFilename" name="screenshotFilename" noPathSet="true" value="" />
                        <Property mapKey="showCanvas" name="showCanvas" value="true" />
                        <Property mapKey="showCursor" name="showCursor" value="true" />
                        <Property mapKey="showFullScreen" name="showFullScreen" value="false" />
                    </Properties>
                    <Inports>
                        <Port name="image.input" direction="1" portID="image.input" guiName="Image Input" allowMultipleConnections="false" invalidationLevel="1">
                            <Properties>
                                <Property mapKey="image.input.renderSizeOrigin" name="image.input.renderSizeOrigin" id="ref7">
                                    <value x="422" y="379" />
                                </Property>
                            </Properties>
                        </Port>
                    </Inports>
                    <Outports />
                    <CoProcessorInports />
                    <CoProcessorOutports />
                    <InteractionHandlers />
                </Processor>
                <Processor type="SimpleRaycaster" name="SimpleRaycaster" id="ref2">
                    <MetaData>
                        <MetaItem name="ProcessorGraphicsItem" type="PositionMetaData" x="-115" y="-82" />
                    </MetaData>
                    <Properties>
                        <Property mapKey="camera" name="camera" projectionMode="1" maxValue="500" minValue="0.01" frustLeft="-0.04142136" frustRight="0.04142136" frustBottom="-0.04142136" frustTop="0.04142136" frustNear="0.1" frustFar="502" fovy="45" eyeMode="1" eyeSeparation="65" axisMode="0" stereoFocalLengh="600" stereoWidth="450" stereoRelativeFocalLength="0.05" useRealWorldFrustum="0" centerOption="0" adaptOnChange="true" id="ref6">
                            <MetaData>
                                <MetaItem name="EditorWindow" type="WindowStateMetaData" visible="false" x="-1049" y="308" />
                            </MetaData>
                            <position x="3.84622121" y="0.16924909" z="0.02949088" />
                            <focus x="0" y="0" z="0" />
                            <upVector x="-0.04396627" y="0.99903286" z="0.00051479" />
                            <trackball moveCenter="false">
                                <center x="0" y="0" z="0" />
                            </trackball>
                            <sceneLLF x="-1" y="-1" z="-1" />
                            <sceneURB x="1" y="1" z="1" />
                        </Property>
                        <Property mapKey="interQuality" name="interQuality" value="High">
                            <Options>
                                <Option Key="Full" Description="Full" Value="Full" />
                                <Option Key="High" Description="High" Value="High" />
                                <Option Key="Medium" Description="Medium" Value="Medium" />
                                <Option Key="Low" Description="Low" Value="Low" />
                            </Options>
                        </Property>
                        <Property mapKey="interactionCoarseness" name="interactionCoarseness" value="2" />
                        <Property mapKey="interactionQuality" name="interactionQuality" value="1" />
                        <Property mapKey="interpolation.coarseness" name="interpolation.coarseness" value="false" />
                        <Property mapKey="renderingQuality" name="renderingQuality" value="Medium">
                            <Options>
                                <Option Key="Full" Description="Full" Value="Full" />
                                <Option Key="High" Description="High" Value="High" />
                                <Option Key="Medium" Description="Medium" Value="Medium" />
                                <Option Key="Low" Description="Low" Value="Low" />
                            </Options>
                        </Property>
                        <Property mapKey="samplingRate" name="samplingRate" value="13.42000008" />
                        <Property mapKey="shader" name="shader" fragmentModified="true" fragmentIsExternal="false" vertexModified="true" vertexIsExternal="false" geometryModified="false" geometryIsExternal="false">
                            <MetaData>
                                <MetaItem name="EditorWindow" type="WindowStateMetaData" visible="false" x="425" y="216" width="700" height="700" />
                            </MetaData>
                            <fragmentSource>
                                <![CDATA[/***********************************************************************************
 *                                                                                 *
 * Voreen - The Volume Rendering Engine                                            *
 *                                                                                 *
 * Copyright (C) 2005-2014 University of Muenster, Germany.                        *
 * Visualization and Computer Graphics Group <http://viscg.uni-muenster.de>        *
 * For a list of authors please refer to the file "CREDITS.txt".                   *
 *                                                                                 *
 * This file is part of the Voreen software package. Voreen is free software:      *
 * you can redistribute it and/or modify it under the terms of the GNU General     *
 * Public License version 2 as published by the Free Software Foundation.          *
 *                                                                                 *
 * Voreen is distributed in the hope that it will be useful, but WITHOUT ANY       *
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR   *
 * A PARTICULAR PURPOSE. See the GNU General Public License for more details.      *
 *                                                                                 *
 * You should have received a copy of the GNU General Public License in the file   *
 * "LICENSE.txt" along with this file. If not, see <http://www.gnu.org/licenses/>. *
 *                                                                                 *
 * For non-commercial academic use see the license exception specified in the file *
 * "LICENSE-academic.txt". To get information about commercial licensing please    *
 * contact the authors.                                                            *
 *                                                                                 *
 ***********************************************************************************/

#include "modules/mod_sampler2d.frag"
#include "modules/mod_sampler3d.frag"
#include "modules/mod_transfunc.frag"

#include "modules/mod_depth.frag"

uniform float samplingStepSize_;
const float SAMPLING_BASE_INTERVAL_RCP = 200.0;

uniform sampler2D entryPoints_;          // ray entry points
uniform sampler2D entryPointsDepth_;     // ray entry points depth
uniform TextureParameters entryParameters_;
uniform sampler2D exitPoints_;           // ray exit points
uniform sampler2D exitPointsDepth_;      // ray exit points depth
uniform TextureParameters exitParameters_;

uniform VolumeParameters volumeStruct_;
uniform sampler3D volume_;               // texture lookup parameters for volume_

uniform TransFuncParameters transferFunc_;
uniform TF_SAMPLER_TYPE transferFuncTex_;

/***
 * Performs direct volume rendering and
 * returns the final fragment color.
 ***/
vec4 directRendering(in vec3 first, in vec3 last, vec2 p) {

    vec4 result = vec4(0.0);
    float depthT = -1.0;
    bool finished = false;

    // calculate ray parameters
    float stepIncr = samplingStepSize_;
    float t = 0.0;
    vec3 direction = last.rgb - first.rgb;
    float tend = length(direction);
    direction = normalize(direction);

    // raycasting loop
    for (int loop=0; !finished && loop<255*255; loop++) {

        vec3 sampleVal = first.rgb + t * direction;
        vec4 voxel = getVoxel(volume_, volumeStruct_, sampleVal);




		//---------------------------
		//hier der wichtige Teil!!!!!
		//---------------------------
		float intensitaet = voxel.a;

		vec4 color = vec4(intensitaet,intensitaet,intensitaet,intensitaet);
		//---------------------------
		//           Ende!!!!!
		//---------------------------
	


        // perform compositing
        if (color.a > 0.0) {
            // accomodate for variable sampling rates (base interval defined by mod_compositing.frag)
            color.a = 1.0 - pow(1.0 - color.a, samplingStepSize_ * SAMPLING_BASE_INTERVAL_RCP);
            result.rgb = result.rgb + (1.0 - result.a) * color.a * color.rgb;
            result.a = result.a + (1.0 -result.a) * color.a;
        }

        // save first hit ray parameter for depth value calculation
        if (depthT < 0.0 && result.a > 0.0)
            depthT = t;

        // early ray termination
        if (result.a >= 1.0) {
            result.a = 1.0;
            finished = true;
        }

        t += stepIncr;
        finished = finished || (t > tend);
    }

    // calculate depth value from ray parameter
    gl_FragDepth = 1.0;
    if (depthT >= 0.0) {
        float depthEntry = textureLookup2Dnormalized(entryPointsDepth_, entryParameters_, p).z;
        float depthExit = textureLookup2Dnormalized(exitPointsDepth_, exitParameters_, p).z;
        gl_FragDepth = calculateDepthValue(depthT/tend, depthEntry, depthExit);
    }

    return result;
}

/***
 * The main method.
 ***/
void main() {
    vec2 p = gl_FragCoord.xy * screenDimRCP_;
    vec3 frontPos = textureLookup2Dnormalized(entryPoints_, entryParameters_, p).rgb;
    vec3 backPos = textureLookup2Dnormalized(exitPoints_, exitParameters_, p).rgb;

    //determine whether the ray has to be casted
    if (frontPos == backPos) {
        //background need no raycasting
        discard;
    } else {
        //fragCoords are lying inside the boundingbox
        FragData0 = directRendering(frontPos, backPos, p);
    }
}
]]>
                            </fragmentSource>
                            <vertexSource>
                                <![CDATA[/***********************************************************************************
 *                                                                                 *
 * Voreen - The Volume Rendering Engine                                            *
 *                                                                                 *
 * Copyright (C) 2005-2014 University of Muenster, Germany.                        *
 * Visualization and Computer Graphics Group <http://viscg.uni-muenster.de>        *
 * For a list of authors please refer to the file "CREDITS.txt".                   *
 *                                                                                 *
 * This file is part of the Voreen software package. Voreen is free software:      *
 * you can redistribute it and/or modify it under the terms of the GNU General     *
 * Public License version 2 as published by the Free Software Foundation.          *
 *                                                                                 *
 * Voreen is distributed in the hope that it will be useful, but WITHOUT ANY       *
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR   *
 * A PARTICULAR PURPOSE. See the GNU General Public License for more details.      *
 *                                                                                 *
 * You should have received a copy of the GNU General Public License in the file   *
 * "LICENSE.txt" along with this file. If not, see <http://www.gnu.org/licenses/>. *
 *                                                                                 *
 * For non-commercial academic use see the license exception specified in the file *
 * "LICENSE-academic.txt". To get information about commercial licensing please    *
 * contact the authors.                                                            *
 *                                                                                 *
 ***********************************************************************************/

layout(location=0)in vec2 vert_position;
layout(location=1)in vec2 vert_texcoord;

out vec2 frag_texcoord;
out vec2 frag_texcoord_supplied;

/**
 * Simply pass through the provided vertex data.
 */
void main() {
    gl_Position = modelViewProjectionMatrixStack_  * vec4(vert_position,0,1);
    frag_texcoord = (vert_position + 1.0f) * 0.5f;
    frag_texcoord_supplied = vert_texcoord;
}
]]>
                            </vertexSource>
                        </Property>
                        <Property mapKey="transferFunction" name="transferFunction" domainFittingStrategy="0">
                            <MetaData>
                                <MetaItem name="EditorWindow" type="WindowStateMetaData" visible="false" />
                                <MetaItem name="TransfuncPropertyWidgetPainterZoom" type="Vec2MetaData">
                                    <value x="0" y="1" />
                                </MetaItem>
                            </MetaData>
                            <TransferFunction type="TransFuncIntensity" alphaMode="1" gammaValue="1">
                                <domains>
                                    <item x="0" y="1" />
                                </domains>
                                <threshold x="0" y="1" />
                                <Keys>
                                    <key type="TransFuncMappingKey" intensity="0" split="false">
                                        <colorL r="0" g="0" b="0" a="0" />
                                    </key>
                                    <key type="TransFuncMappingKey" intensity="1" split="false">
                                        <colorL r="255" g="255" b="255" a="255" />
                                    </key>
                                </Keys>
                            </TransferFunction>
                        </Property>
                    </Properties>
                    <Inports>
                        <Port name="image.entrypoints" direction="1" portID="image.entrypoints" guiName="Entry-points Input" allowMultipleConnections="false" invalidationLevel="1">
                            <Properties />
                        </Port>
                        <Port name="image.exitpoints" direction="1" portID="image.exitpoints" guiName="Exit-points Input" allowMultipleConnections="false" invalidationLevel="1">
                            <Properties />
                        </Port>
                        <Port name="volumehandle.volumehandle" direction="1" portID="volumehandle.volumehandle" guiName="Volume Input" allowMultipleConnections="false" invalidationLevel="1">
                            <Properties>
                                <Property mapKey="textureBorderIntensity" name="textureBorderIntensity" value="0" />
                                <Property mapKey="textureClampMode_" name="textureClampMode_" value="clamp-to-edge" />
                                <Property mapKey="textureFilterMode_" name="textureFilterMode_" value="linear" />
                            </Properties>
                        </Port>
                    </Inports>
                    <Outports>
                        <Port name="image.output" direction="0" portID="image.output" guiName="Image Output" allowMultipleConnections="true" invalidationLevel="1">
                            <Properties>
                                <Property mapKey="blockEvents" name="blockEvents" value="false" />
                            </Properties>
                        </Port>
                    </Outports>
                    <CoProcessorInports />
                    <CoProcessorOutports />
                    <InteractionHandlers />
                </Processor>
                <Processor type="Background" name="Background" id="ref3">
                    <MetaData>
                        <MetaItem name="ProcessorGraphicsItem" type="PositionMetaData" x="-102" y="0" />
                    </MetaData>
                    <Properties>
                        <Property mapKey="angle" name="angle" value="0" />
                        <Property mapKey="backgroundModeAsString" name="backgroundModeAsString" value="monochrome" />
                        <Property mapKey="blendMode" name="blendMode" value="alpha-blending" />
                        <Property mapKey="color1" name="color1">
                            <value x="0" y="0" z="0" w="1" />
                        </Property>
                        <Property mapKey="color2" name="color2">
                            <value x="0.2" y="0.2" z="0.2" w="1" />
                        </Property>
                        <Property mapKey="repeat" name="repeat" value="1" />
                        <Property mapKey="shader.program" name="shader.program" fragmentModified="false" fragmentIsExternal="false" vertexModified="false" vertexIsExternal="false" geometryModified="false" geometryIsExternal="false">
                            <MetaData>
                                <MetaItem name="EditorWindow" type="WindowStateMetaData" visible="false" />
                            </MetaData>
                        </Property>
                        <Property mapKey="texture" name="texture" noPathSet="true" value="" />
                    </Properties>
                    <Inports>
                        <Port name="image.input" direction="1" portID="image.input" guiName="Image Input" allowMultipleConnections="false" invalidationLevel="1">
                            <Properties />
                        </Port>
                    </Inports>
                    <Outports>
                        <Port name="image.output" direction="0" portID="image.output" guiName="Image Output" allowMultipleConnections="true" invalidationLevel="1">
                            <Properties>
                                <Property mapKey="blockEvents" name="blockEvents" value="false" />
                            </Properties>
                        </Port>
                    </Outports>
                    <CoProcessorInports />
                    <CoProcessorOutports />
                    <InteractionHandlers />
                </Processor>
            </Processors>
            <Connections>
                <Connection>
                    <Outport name="volumehandle.volumehandle">
                        <Processor type="VolumeSource" ref="ref0" />
                    </Outport>
                    <Inport name="volumeinport">
                        <Processor type="MeinProcessor" ref="ref1" />
                    </Inport>
                </Connection>
                <Connection>
                    <Outport name="volumehandle.volumehandle">
                        <Processor type="VolumeSource" ref="ref0" />
                    </Outport>
                    <Inport name="volumehandle.volumehandle">
                        <Processor type="SimpleRaycaster" ref="ref2" />
                    </Inport>
                </Connection>
                <Connection>
                    <Outport name="image.entrypoints">
                        <Processor type="MeinProcessor" ref="ref1" />
                    </Outport>
                    <Inport name="image.entrypoints">
                        <Processor type="SimpleRaycaster" ref="ref2" />
                    </Inport>
                </Connection>
                <Connection>
                    <Outport name="image.exitpoints">
                        <Processor type="MeinProcessor" ref="ref1" />
                    </Outport>
                    <Inport name="image.exitpoints">
                        <Processor type="SimpleRaycaster" ref="ref2" />
                    </Inport>
                </Connection>
                <Connection>
                    <Outport name="image.output">
                        <Processor type="SimpleRaycaster" ref="ref2" />
                    </Outport>
                    <Inport name="image.input">
                        <Processor type="Background" ref="ref3" />
                    </Inport>
                </Connection>
                <Connection>
                    <Outport name="image.output">
                        <Processor type="Background" ref="ref3" />
                    </Outport>
                    <Inport name="image.input">
                        <Processor type="Canvas" ref="ref4" />
                    </Inport>
                </Connection>
            </Connections>
            <CoProcessorConnections />
            <PropertyLinks>
                <PropertyLink>
                    <SourceProperty type="CameraProperty" ref="ref5" />
                    <DestinationProperty type="CameraProperty" ref="ref6" />
                    <Evaluator type="LinkEvaluatorCameraId" />
                </PropertyLink>
                <PropertyLink>
                    <SourceProperty type="CameraProperty" ref="ref6" />
                    <DestinationProperty type="CameraProperty" ref="ref5" />
                    <Evaluator type="LinkEvaluatorCameraId" />
                </PropertyLink>
                <PropertyLink>
                    <SourceProperty ref="ref7" />
                    <DestinationProperty ref="ref8" />
                    <Evaluator type="LinkEvaluatorRenderSize" />
                </PropertyLink>
                <PropertyLink>
                    <SourceProperty ref="ref7" />
                    <DestinationProperty ref="ref9" />
                    <Evaluator type="LinkEvaluatorRenderSize" />
                </PropertyLink>
            </PropertyLinks>
        </ProcessorNetwork>
        <Animation />
        <ApplicationModeConfig>
            <PropertyGroups />
            <GroupMembership />
        </ApplicationModeConfig>
    </Workspace>
</VoreenData>
