FROM ubuntu:16.04

ENV TZ=Europe/Berlin

# enable source repositories
RUN sed -i '/deb-src/s/^# //' /etc/apt/sources.list

RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone \
    && apt-get update \
    && apt-get install --no-install-recommends -y \
            make \
            cmake \
            g++ \
            git \
            libglew-dev \
            libboost-all-dev \
            libdevil-dev \
            libgdcm2-dev \
            libtiff5-dev \
            libswscale-dev \
            libavcodec-dev \
            libavformat-dev \
            freeglut3-dev \
            libhdf5-dev \
            libhdf5-cpp-11 \
            liblz4-dev \
            libvtkgdcm2-dev \
            opencl-headers \
            clinfo \
            ocl-icd-libopencl1 \
            ocl-icd-opencl-dev \
            libpython3-all-dev \
            xvfb \
            iputils-ping \
            curl \
            file \
            unifdef \
            valgrind \
            ca-certificates \
            ninja-build \
            python3-mako \
            python3-requests \
            clang-6.0 \
            elfutils \
            libgcrypt11-dev \
            llvm-6.0-dev \
            libc6 \
            libdrm2 \
            libexpat1 \
            libgbm1 \
            libgl1-mesa-dri \
            libglapi-mesa \
            libx11-xcb1 \
            libxcb-dri2-0 \
            libxcb-dri3-0 \
            libxcb-present0 \
            libxcb-sync1 \
            libxcb-xfixes0 \
            libxcb1 \
            libxshmfence1 \
            libfuse2 \
            libfile-copy-recursive-perl \
            zip \
            locales \
            python3-pip

# install meson from pip (at least version 0.45 is required)
RUN pip3 install --upgrade pip setuptools
RUN pip3 install meson

# install dependencies for building mesa
RUN apt-get build-dep mesa qt5-default -y

# Set the locale
RUN echo en_US.UTF-8 UTF-8> /etc/locale.gen && locale-gen
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8

# Build mesa
RUN mkdir -p /build/ \
    && cd /build \
    && git clone "https://gitlab.freedesktop.org/mesa/mesa.git" -b mesa-19.1.0 --depth=1\
    && mkdir -p mesa/build \
    && cd mesa/build \
    && meson -Dplatforms=surfaceless,x11 -Dgallium-drivers=swrast -Ddri-drivers=[] -Dvulkan-drivers=[] .. .\
    && echo SETUP DONE \
    && echo CONFIGURE DONE \
    && meson .. \
    && ninja install\
    && cd /\
    && rm -rf /build/

# Build qt5 (we need to build it manually, because the repo package causes segfaults in the app image)
RUN mkdir -p /build/ \
    && cd /build \
    && git clone https://code.qt.io/qt/qt5.git -b 5.12.4 --depth=1\
    && cd qt5\
    && ./init-repository --module-subset=default,-qtwebengine,-qtcharts,-qtdatavis3d,-qtpurchasing,-qtvirtualkeyboard,-qtnetworkauth,-qtremoteobjects,-qtscript,-qtspeech \
    && cd /build/qt5\
    && mkdir qt5-build\
    && cd qt5-build\
    && ../configure -opensource -nomake examples -nomake tests -confirm-license\
    && make -j8\
    && make install\
    && cd /\
    && rm -rf /build/

RUN mkdir -p /build/ \
    && cd /build \
    && curl -L "https://github.com/pocl/pocl/archive/v1.4.tar.gz" -o v1.4.tar.gz \
    && tar -xzf v1.4.tar.gz \
    && cd pocl-1.4/ \
    && mkdir build \
    && cd build/ \
    && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib .. \
    && make \
    && make install \
    && rm -rf /build/

# Clean up to reduce image size
RUN pip3 uninstall --yes meson pip setuptools

RUN apt-get -y remove python3-pip
RUN apt-get -y autoremove
